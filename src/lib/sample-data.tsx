import type { Subscription } from "@/types/subscription"

export function generateSampleData(): Subscription[] {
  const today = new Date()

  return [
    {
      id: "1",
      name: "Netflix",
      price: 15.99,
      currency: "USD",
      billingCycle: {
        interval: 1,
        unit: "months",
      },
      automaticallyRenews: true,
      startDate: new Date(today.getFullYear(), today.getMonth() - 2, 15),
      nextPaymentDate: new Date(today.getFullYear(), today.getMonth(), today.getDate() + 5),
      paymentMethod: "credit_card",
      paidBy: "",
      category: "Entertainment",
      url: "https://netflix.com",
      status: "active",
      sample: true,
    },
    {
      id: "2",
      name: "Spotify",
      price: 9.99,
      currency: "USD",
      billingCycle: {
        interval: 1,
        unit: "months",
      },
      automaticallyRenews: true,
      startDate: new Date(today.getFullYear(), today.getMonth() - 5, 10),
      nextPaymentDate: new Date(today.getFullYear(), today.getMonth(), today.getDate() + 12),
      paymentMethod: "paypal",
      paidBy: "",
      category: "Music",
      url: "https://spotify.com",
      status: "active",
      sample: true,
    },
    {
      id: "3",
      name: "Adobe Creative Cloud",
      price: 52.99,
      currency: "USD",
      billingCycle: {
        interval: 1,
        unit: "months",
      },
      automaticallyRenews: true,
      startDate: new Date(today.getFullYear(), today.getMonth() - 3, 5),
      nextPaymentDate: new Date(today.getFullYear(), today.getMonth(), today.getDate() + 2),
      paymentMethod: "credit_card",
      paidBy: "Work",
      category: "Software",
      url: "https://adobe.com",
      notes: "Business expense, reimbursable",
      status: "active",
      sample: true,
    },
    {
      id: "4",
      name: "Amazon Prime",
      price: 139,
      currency: "USD",
      billingCycle: {
        interval: 1,
        unit: "years",
      },
      automaticallyRenews: true,
      startDate: new Date(today.getFullYear() - 1, today.getMonth(), 20),
      nextPaymentDate: new Date(today.getFullYear(), today.getMonth() + 2, 20),
      paymentMethod: "credit_card",
      paidBy: "",
      category: "Shopping",
      url: "https://amazon.com",
      status: "active",
      sample: true,
    },
    {
      id: "5",
      name: "Gym Membership",
      price: 29.99,
      currency: "USD",
      billingCycle: {
        interval: 1,
        unit: "months",
      },
      automaticallyRenews: true,
      startDate: new Date(today.getFullYear(), today.getMonth() - 1, 1),
      nextPaymentDate: new Date(today.getFullYear(), today.getMonth() + 1, 1),
      paymentMethod: "bank_transfer",
      paidBy: "",
      category: "Fitness",
      notes: "Can freeze for up to 3 months per year",
      status: "paused",
      sample: true,
    },
    {
      id: "6",
      name: "Disney+",
      price: 7.99,
      currency: "USD",
      billingCycle: {
        interval: 1,
        unit: "months",
      },
      automaticallyRenews: false,
      startDate: new Date(today.getFullYear(), today.getMonth() - 4, 15),
      nextPaymentDate: new Date(today.getFullYear(), today.getMonth(), today.getDate() - 2),
      paymentMethod: "debit_card",
      paidBy: "Partner",
      category: "Entertainment",
      url: "https://disneyplus.com",
      status: "cancelled",
      sample: true,
    },
    {
      id: "7",
      name: "Microsoft 365",
      price: 69.99,
      currency: "EUR",
      billingCycle: {
        interval: 1,
        unit: "years",
      },
      automaticallyRenews: true,
      startDate: new Date(today.getFullYear() - 1, today.getMonth() + 1, 5),
      nextPaymentDate: new Date(today.getFullYear(), today.getMonth() + 1, 5),
      paymentMethod: "credit_card",
      paidBy: "",
      category: "Software",
      url: "https://microsoft.com",
      status: "active",
      sample: true,
    },
  ]
}
